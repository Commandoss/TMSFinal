{"ast":null,"code":"var _jsxFileName = \"/Users/stasbabickij/Projects/GitHub/password-generator/src/components/ControlPanel/ConptrolPanel.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { PasswordGenerated } from \"../passwordGenerated/PasswordGenerated\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ConptrolPanel() {\n  _s();\n\n  let [value, setValue] = useState(15);\n  let [pinPass, setPinPass] = useState({\n    min: 8,\n    max: 100\n  });\n  let [numbers, setNumber] = useState(true);\n  let [signs, setSigns] = useState(false);\n  let [char, setChar] = useState(true);\n  let [update, setUpdate] = useState(true);\n\n  const valueControl = () => {\n    setPinPass({\n      min: 8,\n      max: 100\n    });\n    setChar(true);\n  };\n\n  const valuePin = () => {\n    setChar(false);\n    setSigns(false);\n    setNumber(true);\n    if (value > 11) setValue(10);\n    setPinPass({\n      min: 3,\n      max: 10\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(PasswordGenerated, {\n    value: value,\n    numbers: numbers,\n    signs: signs,\n    char: char,\n    update: update,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"variableButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"strongPassword\",\n        onClick: valueControl,\n        children: \"Strong Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pin\",\n        onClick: valuePin,\n        children: \"Pin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update\",\n        onClick: () => setUpdate(!update),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Buffer\",\n        children: \"Copy Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controlButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"myRange\",\n        children: \"Length \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setValue(e.target.value),\n        type: \"range\",\n        min: pinPass.min,\n        max: pinPass.max,\n        value: value,\n        id: \"myRange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"myRange\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkBox\",\n        id: \"numbers\",\n        onClick: () => setNumber(!numbers),\n        checked: numbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numbers\",\n        children: \"Numbers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkBox\",\n        id: \"signs\",\n        onClick: () => setSigns(!signs),\n        checked: signs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"signs\",\n        children: \"Signs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ConptrolPanel, \"ZcJZT4sM+KekoxXO3BmV7+UFbPo=\");\n\n_c = ConptrolPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConptrolPanel\");","map":{"version":3,"sources":["/Users/stasbabickij/Projects/GitHub/password-generator/src/components/ControlPanel/ConptrolPanel.js"],"names":["React","PasswordGenerated","useState","ConptrolPanel","value","setValue","pinPass","setPinPass","min","max","numbers","setNumber","signs","setSigns","char","setChar","update","setUpdate","valueControl","valuePin","e","target"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {PasswordGenerated} from \"../passwordGenerated/PasswordGenerated\";\nimport {useState} from \"react\";\n\nexport function ConptrolPanel(){\n    let [value, setValue] = useState(15);\n    let [pinPass, setPinPass] = useState({min: 8, max: 100});\n    let [numbers, setNumber] = useState(true);\n    let [signs, setSigns] = useState(false);\n    let [char, setChar] = useState(true);\n    let [update, setUpdate] = useState(true);\n\n    const valueControl= () => {\n        setPinPass({min: 8, max: 100})\n        setChar(true);\n    }\n    const valuePin = () => {\n        setChar(false);\n        setSigns(false);\n        setNumber(true);\n        if(value > 11) setValue(10);\n        setPinPass({min: 3, max: 10});\n\n    }\n\n    return(\n        <PasswordGenerated value={value} numbers={numbers} signs={signs} char={char} update={update}>\n\n            <div className='variableButtons'>\n                <button className='strongPassword' onClick={valueControl}>Strong Password</button>\n                <button className='pin'  onClick={valuePin}>Pin</button>\n                <button className='update' onClick={() => setUpdate(!update)}>Update</button>\n                <button className='Buffer'>Copy Password</button>\n            </div>\n            <div className='controlButtons'>\n                <label htmlFor=\"myRange\">Length </label>\n                <input onChange={(e) => setValue(e.target.value)} type=\"range\" min={pinPass.min} max={pinPass.max} value={value} id='myRange'/>\n                <label htmlFor=\"myRange\">{value}</label>\n                <input type=\"checkBox\" id='numbers' onClick={() => setNumber(!numbers)} checked={numbers}/>\n                <label htmlFor=\"numbers\">Numbers</label>\n                <input type=\"checkBox\" id='signs' onClick={() => setSigns(!signs)} checked={signs}/>\n                <label htmlFor=\"signs\">Signs</label>\n            </div>\n\n        </PasswordGenerated>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}