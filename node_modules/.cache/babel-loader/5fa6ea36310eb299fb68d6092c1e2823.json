{"ast":null,"code":"var _jsxFileName = \"/Users/stasbabickij/Projects/GitHub/password-generator/src/components/passwordGenerated/PasswordGenerated.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./passwordGenerated.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PasswordGenerated(props) {\n  _s();\n\n  const {\n    value,\n    numbers,\n    signs\n  } = props;\n  let [password, setPassword] = useState();\n\n  const CreatePassword = (value, numbers, signs) => {\n    let counter = Number(value);\n    let password = '';\n    let charSet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    if (numbers) charSet += \"0123456789\";\n    if (signs) charSet += '!@#$%^&*()_+~`|}{[]:;?><,./-=';\n    console.log(charSet);\n    console.log(counter);\n\n    while (password.length < counter) {\n      password = password + charSet.charAt(Math.ceil(charSet.length * Math.random() * Math.random() * 10));\n      console.log(password);\n    }\n\n    setPassword(password);\n  };\n\n  useEffect(() => CreatePassword(numbers, value, signs), [numbers, value, signs]); // useEffect(() => CreatePassword(numbers, value, signs), []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"passwordDiv \",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" password\",\n        children: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PasswordGenerated, \"jWvBR4TebTiMThD+S7R2IYBnvz8=\");\n\n_c = PasswordGenerated;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordGenerated\");","map":{"version":3,"sources":["/Users/stasbabickij/Projects/GitHub/password-generator/src/components/passwordGenerated/PasswordGenerated.js"],"names":["React","useState","useEffect","PasswordGenerated","props","value","numbers","signs","password","setPassword","CreatePassword","counter","Number","charSet","console","log","length","charAt","Math","ceil","random","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,OAAO,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AACrC,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA0BH,KAAhC;AACA,MAAI,CAACI,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAtC;;AACA,QAAMS,cAAc,GAAG,CAACL,KAAD,EAAQC,OAAR,EAAiBC,KAAjB,KAA4B;AAC/C,QAAII,OAAO,GAAGC,MAAM,CAACP,KAAD,CAApB;AACA,QAAIG,QAAQ,GAAG,EAAf;AACA,QAAIK,OAAO,GAAG,sDAAd;AACA,QAAIP,OAAJ,EAAaO,OAAO,IAAE,YAAT;AACb,QAAIN,KAAJ,EAAWM,OAAO,IAAE,+BAAT;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AACA,WAAMH,QAAQ,CAACQ,MAAT,GAAkBL,OAAxB,EAAgC;AAC5BH,MAAAA,QAAQ,GAAGA,QAAQ,GAAGK,OAAO,CAACI,MAAR,CAAeC,IAAI,CAACC,IAAL,CAAWN,OAAO,CAACG,MAAR,GAAiBE,IAAI,CAACE,MAAL,EAAjB,GAAiCF,IAAI,CAACE,MAAL,EAAjC,GAAiD,EAA5D,CAAf,CAAtB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH;;AAEDC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACH,GAdD;;AAgBAN,EAAAA,SAAS,CAAC,MAAMQ,cAAc,CAACJ,OAAD,EAAUD,KAAV,EAAiBE,KAAjB,CAArB,EAA8C,CAACD,OAAD,EAAUD,KAAV,EAAiBE,KAAjB,CAA9C,CAAT,CAnBqC,CAoBrC;;AAEA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBACKC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAMKJ,KAAK,CAACiB,QANX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAjCelB,iB;;KAAAA,iB","sourcesContent":["import React from \"react\";\nimport \"./passwordGenerated.css\"\nimport {useState, useEffect} from \"react\";\n\nexport function PasswordGenerated(props) {\n    const {value, numbers, signs} = props;\n    let [password, setPassword] = useState();\n    const CreatePassword = (value, numbers, signs ) => {\n        let counter = Number(value);\n        let password = '';\n        let charSet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n        if (numbers) charSet+=\"0123456789\";\n        if (signs) charSet+='!@#$%^&*()_+~`|}{[]:;?><,./-=';\n        console.log(charSet);\n        console.log(counter);\n        while(password.length < counter){\n            password = password + charSet.charAt(Math.ceil((charSet.length * Math.random() * Math.random() * 10)))\n            console.log(password);\n        }\n\n        setPassword(password);\n    }\n\n    useEffect(() => CreatePassword(numbers, value, signs), [numbers, value, signs]);\n    // useEffect(() => CreatePassword(numbers, value, signs), []);\n\n    return (\n        <div>\n            <div className='passwordDiv '>\n                <p className=' password'>\n                    {password}\n                </p>\n            </div>\n            {props.children}\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}